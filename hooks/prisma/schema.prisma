// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  email      String  @unique
  name       String
  password   String
}

model Zap{
  id           String @id @default(uuid())
  triggerId    String    // A foreign key that connects a Zap to a Trigger.
  trigger      Trigger?   //Zap connects to one Trigger through the triggerId (one-to-one) every zap has one trigger
  actions       Action[]   //one to many relation with actions
}

model Trigger{
   id         String @id @default(uuid())
   zapId      String @unique
   triggerId  String  //A foreign key connecting this Trigger to AvailableTriggers.
   type       AvailableTriggers @relation(fields: [triggerId],references: [id])
   zaps       Zap     @relation(fields: [zapId], references: [id])
}
model Action{
  id         String @id @default(uuid())
  zapId      String
  zap        Zap @relation(fields: [zapId], references: [id])
  actionId String //A foreign key connecting
  type     AvailableAction @relation(fields: [actionId],references: [id])
}


model AvailableTriggers{  //eveery trigger offer some certain type of avaialietrigger 
  id         String @id @default(uuid())
  name       String
  triggers   Trigger[]  //A relation field connecting AvailableTriggers to multiple Trigger instances.
  //avaiable triggers on the zpaier page like calender github,...
}


model AvailableAction{
  id         String @id @default(uuid())
  name       String
  actions   Action[]  //A relation field connecting AvailableAction to multiple Action instances.
  //avaiable actions on the zpaier page like send email slack,...
}